Базы данных:
Способы хранения бд
    реляционный
    аналитический
    ключ-значение(Key-value)
    граф
    документ
    column-family(колончатая, столбчатая)

реляционные
    к ним пишутся запросы на языке sql
    данные строго структурированны в виде таблиц
    у них есть acid
    часто они развернуты в кластере(горзонтальное масштабирование для надежности)
    хорошо мастабируются вертикально

Key-value:
	используется для сессий и профилей пользователей
	кеши, индексы
	промежуточные результаты, капча, флаги
    представители key-value
        redis:
            очень быстрый
            есть возможность постоянного хранения на диске с асинхроной синхронизацией
            expire для ключей
            кластеризация и репликация
            публикации и подписки
            поддержка транзакций
            типы данных: строки до 512 мб, списки, хеши,
                множества, упорядоченные множества
        memcachedb
        aerospike
        apache ignite
        hazelcast
        riak

столбчатые базы:
    таблица строчек переменной длины в столбцах
	для хранения упорядоченных по времени данных
	хранение больших объемов данных
	там где требуется маштабирование
	сложно редактирвать записи
	быстрая вставка
	поиск по ключу быстрый не по ключу ужасный
    представители:
        casandra
            для хранения временных данных
        hadoop
            огромная система для работы с bigData
            hbase - хранилище для Hadoop


документо-ориентированные:
	хранит структурированный документ(json)
	записи могут иметь разную структуру
	документы могут содержать ссылки на другие документы
	можно редактировать
	можно делать запросы по полям
    представители
        Couchbase
        CouchDB
        MongoDB
            (основа MEAN-stack)
        ElasticSearch
            (основная фишка – полнотекстовый поиск)
        Informix
            прям для документов
        Solr
        PostgreSQL
	
граф ориентированные
	хранение данных построено на графах, узлах и связях между ними
	связей больше чем объектов
	можно использовать для фильтрации по большому количеству характеритик
	    (сотни, динамических)(поиск рецептов по ингредиентам)
    представитель
        neoj4
            нода
                объект в базе данных, узел графа
            метка ноды(label)
                условный тип ноды
            связь
                связь между двумя нодами, ребро графа
            тип связи
            свойства ноды
                набор данных, который можно назначить ноде
                например если нода это товар, то в свойствах может храниться
                    id товара из базы postgres
            id ноды
                уникальный идентификатор ноды


CAP:
    базы находятся в зависимости от
        conststency(согласованность)
            как только мы успешно записали данные в наше распределенное хранилище,
                любой клиент получит последние данные при запросе
        availbility(доступность)
            в любой момент клиент может получить данные из хранилища, или ответ об
                их отсмуствии если их нет
        partition tolerance(устойчивость к разделению системы)
            потеря связи между компонентами не влияет на работоспособность системы
            все работаю, но связь нарушена

split brain
	база данных имеет мастера, и доп базу, если связь между мастером
	    и доп базой накрылась, то доп база становиться мастером, и может
	    получиться 2 мастера и расхождение данных, есть разные решения этой проблемы.
	одно из решений этой проблемы
	    есть сервисы(прослойка), которые занимаются определением кто мастер,
	    и распределением запросов, сервисы делают голосавания кто мастер,
	    если сервисы(прослойка) отвалились, то база только чтение